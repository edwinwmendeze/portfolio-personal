---
import LanguageSwitcher from './LanguageSwitcher.astro';
import ProfileSection from './ProfileSection.astro';
import EducationSection from './EducationSection.astro';
import SkillsSection from './SkillsSection.astro';
import ProjectsSection from './ProjectsSection.astro';
import ContactSection from './ContactSection.astro';
import DownloadButton from './DownloadButton.astro';
import profilesConfig from '../../data/profiles.json';
import profileES from '../../data/profile_es.json';
import profileEN from '../../data/profile_en.json';

// Perfiles por idioma
const profiles = {
  es: profileES,
  en: profileEN
};

// Default language
const defaultLang = profilesConfig.default;
---

<div class="page-container">
  <div class="cv-container">
    <LanguageSwitcher activeLang={defaultLang} />
    
    <div class="cv-content" id="cv-content">
      <div data-lang="es" class={defaultLang === 'en' ? 'hidden' : ''}>
        <ProfileSection data={profiles.es} />
        
        <div class="cv-main-content">
          <div class="cv-left-column">
            <ProjectsSection data={profiles.es} />
            <EducationSection data={profiles.es} />
          </div>
          
          <div class="cv-right-column">
            <ContactSection data={profiles.es} />
            <SkillsSection data={profiles.es} />
          </div>
        </div>
      </div>
      
      <div data-lang="en" class={defaultLang === 'es' ? 'hidden' : ''}>
        <ProfileSection data={profiles.en} />
        
        <div class="cv-main-content">
          <div class="cv-left-column">
            <ProjectsSection data={profiles.en} />
            <EducationSection data={profiles.en} />
          </div>
          
          <div class="cv-right-column">
            <ContactSection data={profiles.en} />
            <SkillsSection data={profiles.en} />
          </div>
        </div>
      </div>
      
      <div class="download-section">
        <DownloadButton text="Download CV (PDF)" lang="en" />
        <DownloadButton text="Descargar CV (PDF)" lang="es" />
      </div>
    </div>
  </div>
</div>

<style>
  .page-container {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding: 2rem;
    background-color: #f0f2f5;
    font-size: 0.9rem;
  }

  .cv-container {
    width: 21cm; /* A4 width */
    min-height: 29.7cm; /* A4 height */
    margin: 0 auto;
    padding: 2rem;
    font-family: 'JetBrains Mono', monospace;
    color: #2d3748;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  .cv-content {
    margin-top: 2rem;
  }
  
  .cv-main-content {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 2rem;
    margin-top: 2rem;
    align-items: start;
  }

  .cv-left-column, .cv-right-column {
    display: flex;
    flex-direction: column;
  }

  .cv-left-column > :first-child,
  .cv-right-column > :first-child {
    margin-top: 0;
  }

  .cv-left-column :global(.section-title:first-child),
  .cv-right-column :global(.section-title:first-child) {
    margin-top: 0;
    padding-top: 0;
  }
  
  .download-section {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 3rem;
    flex-wrap: wrap;
  }
  
  /* Clase global para ocultar elementos */
  :global(.hidden) {
    display: none !important;
  }
  
  /* Soporte para tema oscuro */
  :root[data-theme="dark"] .page-container {
    background-color: #1a202c;
  }
  
  :root[data-theme="dark"] .cv-container {
    background-color: #2d3748;
    color: #e2e8f0;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  }
  
  @media print {
    .page-container {
      padding: 0;
      background: none;
    }
    
    .cv-container {
      width: 100%;
      min-height: auto;
      box-shadow: none;
      padding: 0;
    }
    
    .download-section {
      display: none;
    }
  }

  @media (max-width: 21cm) {
    .page-container {
      padding: 1rem;
    }

    .cv-container {
      width: 100%;
      min-height: auto;
    }

    .cv-main-content {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const langButton = document.querySelector<HTMLButtonElement>('.lang-button');
    const contentElements = document.querySelectorAll<HTMLElement>('[data-lang]');
    
    // Obtener el idioma actual de los elementos visibles o usar 'es' como fallback
    let currentLang = 'es';
    contentElements.forEach(element => {
      if (!element.classList.contains('hidden')) {
        currentLang = element.getAttribute('data-lang') || 'es';
      }
    });
    
    // Manejar el clic en el botón de cambio de idioma
    if (langButton) {
      langButton.addEventListener('click', () => {
        const targetLang = langButton.getAttribute('data-lang');
        if (targetLang) {
          // Cambiar la visibilidad de los elementos
          contentElements.forEach(element => {
            if (element.getAttribute('data-lang') === targetLang) {
              element.classList.remove('hidden');
            } else {
              element.classList.add('hidden');
            }
          });
          
          // Actualizar el botón con el idioma opuesto
          const newButtonLang = targetLang === 'es' ? 'en' : 'es';
          const newButtonText = newButtonLang === 'en' ? 'English' : 'Español';
          
          langButton.setAttribute('data-lang', newButtonLang);
          langButton.textContent = newButtonText;
        }
      });
    }
  });
</script> 