---
// src/components/layout/Header.astro
import type { Basics } from '@types';
import { getPath } from '@utils/routeUtils';
import Button from '../ui/Button.astro';

export interface Props {
  profileData?: {
    basics: Basics;
  };
  showPrintButton?: boolean;
}

const { profileData, showPrintButton = false } = Astro.props;
const basics = profileData?.basics;

// Obtener la ruta actual para determinar que botón mostrar
const currentPath = Astro.url.pathname;
const isInCVPage = currentPath.endsWith('/cv') || currentPath.endsWith('/cv/');

---

<header class="site-header">
  <div class="container">
    <a href={getPath()} class="logo">
      {basics ? `EdwinMendez` : 'Portfolio'}
    </a>
    
    <nav class="main-nav">
      <input type="checkbox" id="nav-toggle" class="nav-toggle" />
      <label for="nav-toggle" class="nav-toggle-label" aria-label="Toggle menu">
        <span></span>
        <span></span>
        <span></span>
      </label>
      <ul class="nav-menu">
        <li><a href={getPath()}>Inicio</a></li>
        <li><a href={getPath('projects')}>Proyectos</a></li>
        <li><a href={getPath('contact')}>Contacto</a></li>
      </ul>
    </nav>
    
    <div class="buttons-container">
      <button id="theme-toggle" class="theme-toggle" aria-label="Cambiar tema">
        <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="5"></circle>
          <line x1="12" y1="1" x2="12" y2="3"></line>
          <line x1="12" y1="21" x2="12" y2="23"></line>
          <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
          <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
          <line x1="1" y1="12" x2="3" y2="12"></line>
          <line x1="21" y1="12" x2="23" y2="12"></line>
          <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
          <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
        </svg>
        <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
        </svg>
      </button>

      {showPrintButton && (
        <Button 
          id="print-btn" 
          href={isInCVPage ? undefined : "/portfolio-personal/cv"}
          variant="outline" 
          size="small"
          ariaLabel={isInCVPage ? "Imprimir CV" : "Ver CV"}
          data-print={isInCVPage ? "true" : undefined}
          class="fixed-width-btn"
        >
          {isInCVPage ? (
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="6 9 6 2 18 2 18 9"></polyline>
              <path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path>
              <rect x="6" y="14" width="12" height="8"></rect>
            </svg>
          ) : (
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14 2 14 8 20 8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
              <line x1="10" y1="9" x2="8" y2="9"></line>
            </svg>
          )}
          <span class="print-text">{isInCVPage ? "Imprimir CV" : "Ver CV"}</span>
        </Button>
      )}
    </div>
  </div>
</header>

<script>
  // Gestión del tema claro/oscuro
  document.addEventListener('DOMContentLoaded', () => {
    const themeToggle = document.getElementById('theme-toggle');
    
    // Verificar si hay un tema guardado en localStorage
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
      document.documentElement.setAttribute('data-theme', savedTheme);
    }
    
    // Actualizar la apariencia del botón según el tema actual
    updateThemeToggle();
    
    // Manejar el clic en el botón de tema
    themeToggle?.addEventListener('click', () => {
      const currentTheme = document.documentElement.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      
      updateThemeToggle();
    });
  });
  
  // Actualizar la apariencia del botón según el tema actual
  function updateThemeToggle() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const themeToggle = document.getElementById('theme-toggle');
    
    if (currentTheme === 'dark') {
      themeToggle?.classList.add('dark-mode');
    } else {
      themeToggle?.classList.remove('dark-mode');
    }
  }
  
  // El event listener para el botón de impresión ahora se maneja en MainLayout.astro
</script>

<style>
  .site-header {
    padding: var(--space-md) 0;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    background-color: var(--color-background);
    opacity: 0.97;
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 1000;
    transition: all 0.3s ease;
  }
  
  :global(main) {
    padding-top: 5rem;
  }
  
  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: 800px;
    margin: 0 auto;
    padding: 0 var(--space-md);
    height: 4rem;
    border-bottom: 1px solid var(--color-border);
  }
  
  .logo {
    font-family: var(--font-family-mono);
    font-size: var(--text-xl);
    font-weight: 700;
    color: var(--color-primary);
    text-decoration: none;
    position: relative;
    padding: 0.5rem 0;
  }
  
  .logo::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--color-primary);
    transition: width 0.3s ease;
  }
  
  .logo:hover::after {
    width: 100%;
  }

  /* Navigation styling */
  .main-nav {
    display: flex;
    align-items: center;
  }
  
  .nav-toggle {
    display: none;
  }
  
  .nav-toggle-label {
    display: none;
  }
  
  .nav-menu {
    display: flex;
    gap: var(--space-lg);
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  .nav-menu li {
    position: relative;
  }
  
  .nav-menu a {
    color: var(--color-text);
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 0;
    position: relative;
    display: inline-block;
    transition: color var(--transition-fast);
  }
  
  .nav-menu a::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--color-primary);
    transition: width 0.3s ease;
  }
  
  .nav-menu a:hover {
    color: var(--color-primary);
  }
  
  .nav-menu a:hover::after {
    width: 100%;
  }
  
  /* Botón de tema */
  .buttons-container {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
  }
  
  .theme-toggle {
    background: transparent;
    border: none;
    cursor: pointer;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    color: var(--color-text);
    transition: var(--transition-fast);
    position: relative;
    overflow: hidden;
  }
  
  .theme-toggle:hover {
    background-color: var(--color-action-light);
    transform: translateY(-2px);
  }
  
  .sun-icon, .moon-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: opacity 0.3s ease, transform 0.5s ease;
  }
  
  .sun-icon {
    opacity: 1;
    transform: translate(-50%, -50%) rotate(0);
  }
  
  .moon-icon {
    opacity: 0;
    transform: translate(-50%, -50%) rotate(90deg);
  }
  
  .theme-toggle.dark-mode .sun-icon {
    opacity: 0;
    transform: translate(-50%, -50%) rotate(-90deg);
  }
  
  .theme-toggle.dark-mode .moon-icon {
    opacity: 1;
    transform: translate(-50%, -50%) rotate(0);
  }
  
  /* Botón con ancho fijo para evitar saltos en la UI */
  .fixed-width-btn {
    min-width: 110px;
    justify-content: center;
  }
  
  .print-text {
    white-space: nowrap;
  }
  
  /* Responsive styles */
  @media (max-width: 768px) {
    .container {
      height: auto;
      padding: var(--space-xs) var(--space-md);
    }
    
    .nav-toggle-label {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      width: 2rem;
      height: 1.5rem;
      cursor: pointer;
      z-index: 200;
    }
    
    .nav-toggle-label span {
      display: block;
      height: 2px;
      width: 100%;
      background-color: var(--color-text-inverted);
      border-radius: 2px;
      transition: all 0.3s ease;
    }
    
    .nav-menu {
      position: fixed;
      top: 0;
      right: -100%;
      width: auto;
      min-width: 200px;
      max-width: 300px;
      height: auto;
      max-height: auto;
      background-color: var(--color-card);
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
      flex-direction: column;
      gap: var(--space-xl);
      padding: 4.5rem var(--space-xl) var(--space-xl);
      border-radius: 0 0 0 12px;
      box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);
      transition: right 0.3s ease;
      z-index: 100;
    }
    
    .nav-toggle:checked ~ .nav-menu {
      right: 0;
    }
    
    .nav-toggle:checked ~ .nav-toggle-label span:nth-child(1) {
      transform: translateY(10px) rotate(45deg);
    }
    
    .nav-toggle:checked ~ .nav-toggle-label span:nth-child(2) {
      opacity: 0;
    }
    
    .nav-toggle:checked ~ .nav-toggle-label span:nth-child(3) {
      transform: translateY(-10px) rotate(-45deg);
    }
    
    .print-text {
      display: none;
    }
  }
  
  @media (max-width: 480px) {
    .logo {
      font-size: var(--text-lg);
    }
  }
  
  @media print {
    .site-header {
      display: none;
    }
  }
</style>