---
import MainLayout from '@layouts/MainLayout.astro';
import { getProfileDataWithFallback } from '../data/api/profileData';
import type { Profile, Education, Project, Skill } from '@types';
import Tag from '@components/ui/Tag.astro';
import Button from '@components/ui/Button.astro';

// Tipos adicionales para manejar los datos de experiencia laboral
interface WorkExperience {
  company: string;
  position: string;
  startDate: string;
  endDate?: string;
  summary: string;
  highlights?: string[];
}

// Extender el tipo Profile con la propiedad work que falta en la definición original
interface ExtendedProfile extends Profile {
  work?: WorkExperience[];
}

const profile = await getProfileDataWithFallback() as ExtendedProfile;
---

<MainLayout 
  title="Currículum - Edwin Méndez" 
  description="Currículum profesional de Edwin Méndez"
  profileData={{ basics: profile?.basics }}
  showPrintButton={true}
>
  <main class="cv-container">
    <!-- Encabezado del CV -->
    <div class="cv-header">
      <div class="profile-info">
        <h1>{profile?.basics?.name} {profile?.basics?.last_name}</h1>
        <p class="headline">{profile?.basics?.label}</p>
        
        <div class="contact-details">
          {profile?.basics?.email && (
            <div class="contact-item">
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline></svg>
              <span>{profile.basics.email}</span>
            </div>
          )}
          
          {profile?.basics?.phone && (
            <div class="contact-item">
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg>
              <span>{profile.basics.phone}</span>
            </div>
          )}
          
          {profile?.basics?.location && (
            <div class="contact-item">
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path><circle cx="12" cy="10" r="3"></circle></svg>
              <span>{profile.basics.location.city}, {profile.basics.location.region}</span>
            </div>
          )}
        </div>
      </div>
    </div>

    <!-- Resumen -->
    {profile?.basics?.summary && (
      <section class="cv-section">
        <h2>Perfil Profesional</h2>
        <div class="section-content">
          <p class="summary">{profile.basics.summary}</p>
        </div>
      </section>
    )}
    
    <!-- Experiencia -->
    {profile?.work && profile.work.length > 0 && (
      <section class="cv-section">
        <h2>Experiencia Profesional</h2>
        <div class="section-content timeline">
          {profile.work.map((job: WorkExperience) => (
            <div class="timeline-item">
              <div class="timeline-marker"></div>
              <div class="timeline-content">
                <div class="job-title-container">
                  <h3 class="job-title">{job.position}</h3>
                  <span class="job-company">{job.company}</span>
                  <span class="job-period">{job.startDate?.toString() || ''} – {job.endDate?.toString() || 'Presente'}</span>
                </div>
                <p class="job-summary">{job.summary}</p>
                {job.highlights && job.highlights.length > 0 && (
                  <ul class="job-highlights">
                    {job.highlights.map((item: string) => (
                      <li>{item}</li>
                    ))}
                  </ul>
                )}
              </div>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Educación -->
    {profile?.education && profile.education.length > 0 && (
      <section class="cv-section">
        <h2>Educación</h2>
        <div class="section-content timeline">
          {profile.education.map((edu: Education) => (
            <div class="timeline-item">
              <div class="timeline-marker"></div>
              <div class="timeline-content education-item">
                <h3 class="education-degree">{edu.studyType} en {edu.area}</h3>
                <div class="education-details">
                  <span class="education-institution">{edu.institution}</span>
                  <span class="education-period">{edu.startDate?.toString() || ''} – {edu.endDate?.toString() || 'Presente'}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}
    
    <!-- Habilidades -->
    {profile?.skills && profile.skills.length > 0 && (
      <section class="cv-section">
        <h2>Habilidades</h2>
        <div class="section-content skills-container">
          {profile.skills.map((skill: Skill) => (
            <div class="skill-category">
              <h3 class="skill-name">{skill.name}</h3>
              <div class="skill-tags">
                {skill.keywords.map((keyword: string) => (
                  <Tag text={keyword} variant="default" size="small" />
                ))}
              </div>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Proyectos destacados -->
    {profile?.projects && profile.projects.filter(p => p.featured).length > 0 && (
      <section class="cv-section">
        <h2>Proyectos Destacados</h2>
        <div class="section-content projects">
          {profile.projects.filter(p => p.featured).map((project: Project) => (
            <div class="project-card">
              <h3 class="project-title">{project.name}</h3>
              {project.description && <p class="project-description">{project.description as string}</p>}
              
              {project.highlights && project.highlights.length > 0 && (
                <ul class="project-highlights">
                  {project.highlights.map((highlight: string) => (
                    <li>{highlight}</li>
                  ))}
                </ul>
              )}
              
              {project.technologies && project.technologies.length > 0 && (
                <div class="project-tags">
                  {project.technologies.map((tech: string) => (
                    <Tag text={tech} variant="default" size="small" />
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      </section>
    )}
    
    <!-- Botón para imprimir (solo visible en pantalla) -->
    <div class="print-button-container">
      <Button id="print-cv-button" variant="primary" size="small" aria-label="Imprimir CV" data-print="true" class="fixed-width-btn">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="6 9 6 2 18 2 18 9"></polyline>
          <path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path>
          <rect x="6" y="14" width="12" height="8"></rect>
        </svg>
        <span class="print-text">Imprimir CV</span>
      </Button>
    </div>
  </main>
</MainLayout>

<script>
  // Funcionalidad de impresión
  document.getElementById('print-cv-button')?.addEventListener('click', () => {
    window.print();
  });
</script>

<style>
  /* Estilos generales */
  .cv-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 var(--space-md);
  }
  
  /* Encabezado */
  .cv-header {
    margin-bottom: var(--space-xl);
    padding-bottom: var(--space-md);
    border-bottom: 1px solid var(--color-border);
  }
  
  .profile-info h1 {
    font-size: var(--text-3xl);
    margin-bottom: var(--space-xs);
    color: var(--color-heading);
  }
  
  .headline {
    font-size: var(--text-lg);
    color: var(--color-primary);
    margin-bottom: var(--space-md);
    font-weight: 500;
  }
  
  .contact-details {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-md) var(--space-xl);
    margin-top: var(--space-md);
  }
  
  .contact-item {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: var(--text-sm);
  }
  
  .contact-item svg {
    color: var(--color-primary);
  }
  
  /* Secciones */
  .cv-section {
    margin-bottom: var(--space-xl);
  }
  
  .cv-section h2 {
    font-size: var(--text-xl);
    margin-bottom: var(--space-md);
    color: var(--color-heading);
    display: flex;
    align-items: center;
    gap: var(--space-sm);
  }
  
  .cv-section h2::after {
    content: "";
    flex: 1;
    height: 1px;
    background-color: var(--color-border);
    margin-left: var(--space-sm);
  }
  
  .section-content {
    padding-left: var(--space-sm);
  }
  
  /* Resumen */
  .summary {
    font-size: var(--text-md);
    line-height: 1.6;
    color: var(--color-text);
  }
  
  /* Timeline para experiencia y educación */
  .timeline {
    position: relative;
  }
  
  .timeline::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 6px;
    width: 2px;
    background-color: var(--color-border);
  }
  
  .timeline-item {
    position: relative;
    padding-left: var(--space-xl);
    margin-bottom: var(--space-lg);
  }
  
  .timeline-item:last-child {
    margin-bottom: 0;
  }
  
  .timeline-marker {
    position: absolute;
    left: 0;
    top: 5px;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background-color: var(--color-primary);
    z-index: 1;
  }
  
  .timeline-content {
    position: relative;
  }
  
  /* Experiencia */
  .job-title-container {
    margin-bottom: var(--space-sm);
  }
  
  .job-title {
    font-size: var(--text-lg);
    margin-bottom: var(--space-xs);
    color: var(--color-heading);
  }
  
  .job-company {
    font-weight: 500;
    color: var(--color-text);
    display: block;
    margin-bottom: var(--space-2xs);
  }
  
  .job-period {
    display: block;
    font-size: var(--text-sm);
    color: var(--color-text-light);
    margin-bottom: var(--space-sm);
  }
  
  .job-summary {
    margin-bottom: var(--space-sm);
    line-height: 1.6;
  }
  
  .job-highlights {
    padding-left: var(--space-lg);
    margin-top: var(--space-sm);
  }
  
  .job-highlights li {
    margin-bottom: var(--space-xs);
    position: relative;
    line-height: 1.5;
  }
  
  /* Educación */
  .education-degree {
    font-size: var(--text-lg);
    margin-bottom: var(--space-xs);
    color: var(--color-heading);
  }
  
  .education-institution {
    font-weight: 500;
    display: block;
    margin-bottom: var(--space-2xs);
  }
  
  .education-period {
    font-size: var(--text-sm);
    color: var(--color-text-light);
  }
  
  /* Habilidades */
  .skills-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: var(--space-md);
  }
  
  .skill-category {
    margin-bottom: var(--space-md);
  }
  
  .skill-name {
    font-size: var(--text-md);
    margin-bottom: var(--space-sm);
    color: var(--color-heading);
  }
  
  .skill-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }
  
  /* Proyectos */
  .projects {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: var(--space-lg);
  }
  
  .project-card {
    background-color: var(--color-card-background);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-md);
    transition: transform var(--transition-normal), box-shadow var(--transition-normal);
  }
  
  .project-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
  }
  
  .project-title {
    font-size: var(--text-lg);
    margin-bottom: var(--space-sm);
    color: var(--color-heading);
  }
  
  .project-description {
    margin-bottom: var(--space-sm);
    line-height: 1.6;
  }
  
  .project-highlights {
    padding-left: var(--space-lg);
    margin-top: var(--space-sm);
    margin-bottom: var(--space-md);
  }
  
  .project-highlights li {
    margin-bottom: var(--space-xs);
    line-height: 1.5;
  }
  
  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
    margin-top: var(--space-sm);
  }
  
  /* Botón de impresión */
  .print-button-container {
    display: flex;
    justify-content: center;
    margin: var(--space-xl) 0;
  }
  
  .print-button {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    background-color: var(--color-primary);
    color: white;
    border: none;
    padding: var(--space-sm) var(--space-lg);
    border-radius: var(--radius-full);
    font-family: var(--font-family-mono);
    font-weight: 500;
    font-size: var(--text-sm);
    cursor: pointer;
    transition: all var(--transition-normal);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  .print-button:hover {
    background-color: var(--color-primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
  }
  
  /* Estilos para impresión */
  @media print {
    .print-button-container {
      display: none;
    }
    
    .cv-container {
      padding: 0;
    }
    
    body {
      font-size: 12pt;
      color: #000;
    }
    
    h1, h2, h3, h4 {
      color: #000;
    }
    
    .job-company, .education-institution {
      font-weight: 600;
    }
    
    .timeline::before {
      background-color: #ccc;
    }
    
    .timeline-marker {
      background-color: #333;
    }
    
    .project-card {
      box-shadow: none;
      border: 1px solid #ccc;
      break-inside: avoid;
    }
    
    .project-card:hover {
      transform: none;
      box-shadow: none;
    }
    
    /* Ajustes para impresión */
    @page {
      margin: 1.5cm;
    }
    
    h1, h2, h3, h4 {
      page-break-after: avoid;
    }
    
    .cv-section {
      page-break-inside: avoid;
    }
    
    .timeline-item, .project-card {
      page-break-inside: avoid;
    }
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .projects {
      grid-template-columns: 1fr;
    }
    
    .skills-container {
      grid-template-columns: 1fr;
    }
    
    .contact-details {
      flex-direction: column;
      gap: var(--space-sm);
    }
  }
</style>
