---
import MainLayout from '@layouts/MainLayout.astro';
import ProfileHeader from '@components/profile/ProfileHeader.astro';
import SkillsList from '@components/profile/SkillsList.astro';
import ProjectCard from '@components/profile/ProjectCard.astro';
import EducationList from '@components/profile/EducationList.astro';
import ErrorBoundary from '@components/common/ErrorBoundary.astro';
import Button from '@components/ui/Button.astro';
import { getProfileData } from '../data/api/profileData';
import type { Profile } from '@types';

import { getProfileDataWithFallback } from '../data/api/profileData';
import { getPath } from '@utils/routeUtils';
import Card from '@components/ui/Card.astro';

// Estado para manejo de errores y carga
let isLoading = true;
let error: Error | null = null;
let profile: Profile | null = null;

try {
  profile = await getProfileDataWithFallback();
  isLoading = false;
} catch (e) {
  error = e instanceof Error ? e : new Error(String(e));
  isLoading = false;
  console.error('Error al cargar datos del perfil:', error);
}

// Filtrar proyectos destacados para la p치gina principal
const featuredProjects = profile?.projects?.filter(project => project.featured) || [];
---

<MainLayout 
  title={profile ? `${profile.basics.name} ${profile.basics.last_name} - ${profile.basics.label}` : 'Portfolio Personal'}
  profileData={profile ? { basics: profile.basics } : undefined}
  showPrintButton={false}
>
  {isLoading && (
    <div class="loading-state">
      <p>Cargando informaci칩n del perfil...</p>
    </div>
  )}

  {error && (
    <div class="error-state">
      <h2>No se pudieron cargar los datos</h2>
      <p>Hubo un problema al obtener la informaci칩n del perfil. Por favor, intenta nuevamente m치s tarde.</p>
      {import.meta.env.DEV && <pre>{error.message}</pre>}
    </div>
  )}

  {profile && (
    <div class="portfolio-container">
      <ErrorBoundary>
        <ProfileHeader basics={profile.basics} />
      </ErrorBoundary>

      <div class="portfolio-content">
        <section class="section">
          <h2 class="section-header section-header-main">Proyectos Destacados</h2>
          <Card variant="border" class="projects-container">
            {featuredProjects.length > 0 ? (
              featuredProjects.map(project => (
                <ErrorBoundary>
                  <ProjectCard project={project} />
                </ErrorBoundary>
              ))
            ) : (
              <p class="no-content">No hay proyectos destacados disponibles.</p>
            )}
          </Card>
          <div class="view-all">
            <Button href={getPath('projects')} variant="outline" size="medium">Ver todos los proyectos</Button>
          </div>
        </section>
        
        <section class="section">
          <ErrorBoundary>
            <SkillsList skills={profile.skills} />
          </ErrorBoundary>
        </section>
        
        <section class="section">
          <ErrorBoundary>
            <EducationList education={profile.education} />
          </ErrorBoundary>
        </section>
      </div>
    </div>
  )}
</MainLayout>

<style>
  .loading-state, .error-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 300px;
    text-align: center;
  }

  .portfolio-container {
    font-family: var(--font-family-sans);
    max-width: 800px;
    margin: 0 auto;
  }

  .portfolio-content {
    margin-top: var(--space-xl);
  }

  .projects-container {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
  }

  .no-content {
    text-align: center;
    color: var(--color-text-light);
    padding: var(--space-lg);
    border: 1px dashed var(--color-border);
    border-radius: var(--radius-md);
  }
  
  .view-all {
    margin-top: var(--space-lg);
    text-align: center;
  }

  @media print {
    .view-all {
      display: none;
    }

    .portfolio-container {
      padding: 0;
    }
  }

  @media (max-width: 900px) {
    .portfolio-container {
      padding: 0 var(--space-md);
    }
  }
</style>