---
import MainLayout from '@layouts/MainLayout.astro';
import ProfileHeader from '@components/profile/ProfileHeader.astro';
import SkillsList from '@components/profile/SkillsList.astro';
import ProjectCard from '@components/profile/ProjectCard.astro';
import EducationList from '@components/profile/EducationList.astro';
import ErrorBoundary from '@components/common/ErrorBoundary.astro';
import { getProfileData } from '../data/api/profileData';
import type { Profile } from '@types';

import { getProfileDataWithFallback } from '../data/api/profileData';

// Estado para manejo de errores y carga
let isLoading = true;
let error: Error | null = null;
let profile: Profile | null = null;

try {
  profile = await getProfileDataWithFallback();
  isLoading = false;
} catch (e) {
  error = e instanceof Error ? e : new Error(String(e));
  isLoading = false;
  console.error('Error al cargar datos del perfil:', error);
}

// Filtrar proyectos destacados para la p치gina principal
const featuredProjects = profile?.projects?.filter(project => project.featured) || [];
---

<MainLayout title={profile ? `${profile.basics.name} ${profile.basics.last_name} - ${profile.basics.label}` : 'Portfolio Personal'}>
  {isLoading && (
    <div class="loading-state">
      <p>Cargando informaci칩n del perfil...</p>
    </div>
  )}

  {error && (
    <div class="error-state">
      <h2>No se pudieron cargar los datos</h2>
      <p>Hubo un problema al obtener la informaci칩n del perfil. Por favor, intenta nuevamente m치s tarde.</p>
      {import.meta.env.DEV && <pre>{error.message}</pre>}
    </div>
  )}

  {profile && (
    <div class="profile-container">
      <ErrorBoundary>
        <ProfileHeader basics={profile.basics} />
      </ErrorBoundary>

      <div class="two-column-layout">
        <div class="main-column">
          <section class="section">
            <h2>Proyectos Destacados</h2>
            <div class="projects-container">
              {featuredProjects.length > 0 ? (
                featuredProjects.map(project => (
                  <ErrorBoundary>
                    <ProjectCard project={project} />
                  </ErrorBoundary>
                ))
              ) : (
                <p class="no-content">No hay proyectos destacados disponibles.</p>
              )}
            </div>
            <div class="view-all">
              <a href="/projects" class="button">Ver todos los proyectos</a>
            </div>
          </section>
        </div>

        <div class="side-column">
          <ErrorBoundary>
            <SkillsList skills={profile.skills} />
          </ErrorBoundary>
          
          <ErrorBoundary>
            <EducationList education={profile.education} />
          </ErrorBoundary>
        </div>
      </div>
    </div>
  )}
</MainLayout>

<style>
  .loading-state, .error-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: var(--space-xl) 0;
    text-align: center;
  }

  .error-state h2 {
    color: var(--color-error-text);
    margin-bottom: var(--space-md);
  }

  .error-state pre {
    margin-top: var(--space-md);
    background-color: rgba(0, 0, 0, 0.05);
    padding: var(--space-md);
    border-radius: 4px;
    overflow-x: auto;
    font-family: var(--font-family-mono);
    text-align: left;
    max-width: 100%;
  }

  .profile-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: var(--space-xl) var(--space-md);
  }

  .two-column-layout {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: var(--space-xl);
    margin-top: var(--space-xl);
  }

  .section {
    margin-bottom: var(--space-xl);
  }

  section h2 {
    font-size: var(--text-xl);
    margin-bottom: var(--space-lg);
    color: var(--color-text);
    border-bottom: 2px solid var(--color-primary);
    padding-bottom: var(--space-xs);
  }

  .projects-container {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
  }

  .no-content {
    color: var(--color-text-muted);
    font-style: italic;
  }

  .view-all {
    margin-top: var(--space-lg);
    text-align: center;
  }

  .button {
    display: inline-block;
    background-color: var(--color-primary);
    color: white;
    padding: var(--space-sm) var(--space-lg);
    border-radius: 4px;
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.2s ease;
  }

  .button:hover {
    background-color: var(--color-primary-dark);
  }

  @media (max-width: 900px) {
    .two-column-layout {
      grid-template-columns: 1fr;
    }
  }

  @media print {
    .view-all {
      display: none;
    }

    .two-column-layout {
      display: block;
    }

    .profile-container {
      padding: 0;
    }
  }
</style>