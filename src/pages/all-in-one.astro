---
// src/pages/all-in-one.astro - Versión todo en uno del portfolio
import MainLayout from '@layouts/MainLayout.astro';
import ProfileHeader from '@components/profile/ProfileHeader.astro';
import FeaturedProjects from '@components/profile/FeaturedProjects.astro';
import SkillsList from '@components/profile/SkillsList.astro';
import ProjectCard from '@components/profile/ProjectCard.astro';
import ErrorBoundary from '@components/common/ErrorBoundary.astro';
import Tag from '@components/ui/Tag.astro';
import { getProfileDataWithFallback } from '../data/api/profileData';
import type { Profile, Education, Project, Skill } from '@types';

// Tipos adicionales para manejar los datos de experiencia laboral
interface WorkExperience {
  company: string;
  position: string;
  startDate: string;
  endDate?: string;
  summary: string;
  highlights?: string[];
}

// Extender el tipo Profile con la propiedad work
interface ExtendedProfile extends Profile {
  work?: WorkExperience[];
}

// Utilizamos el método con fallback para mayor robustez
let profile: ExtendedProfile | null = null;
let error: Error | null = null;

try {
  profile = await getProfileDataWithFallback() as ExtendedProfile;
} catch (e) {
  error = e instanceof Error ? e : new Error(String(e));
  console.error('Error al cargar datos del perfil:', error);
}

// Ordenar proyectos: primero los destacados
const sortedProjects = profile?.projects?.sort((a, b) => {
  // Primero mostrar proyectos destacados
  if (a.featured && !b.featured) return -1;
  if (!a.featured && b.featured) return 1;
  
  // Si ambos tienen el mismo estado de destacado, ordenar alfabéticamente por nombre
  return a.name.localeCompare(b.name);
}) || [];

---

<MainLayout 
  title={profile ? `${profile.basics.name} ${profile.basics.last_name} - Portfolio Personal` : 'Portfolio Personal'} 
  description={profile?.basics.summary || 'Portfolio personal'}
  profileData={profile ? { basics: profile.basics } : undefined}
  showPrintButton={true}
>
  <!-- Navbar para navegación interna -->
  <nav class="section-nav">
    <ul>
      <li><a href="#inicio">Inicio</a></li>
      <li><a href="#proyectos">Proyectos</a></li>
      <li><a href="#curriculum">Currículum</a></li>
      <li><a href="#contacto">Contacto</a></li>
    </ul>
  </nav>

  {error && (
    <div class="error-message">
      <h2>No se pudieron cargar los datos</h2>
      <p>Hubo un problema al obtener la información del perfil. Por favor, intenta nuevamente más tarde.</p>
      {import.meta.env.DEV && <pre>{error.message}</pre>}
    </div>
  )}

  {profile && (
    <div class="all-in-one-container">
      <!-- SECCIÓN: INICIO -->
      <section id="inicio" class="page-section">
        <ErrorBoundary>
          <ProfileHeader basics={profile.basics} />
        </ErrorBoundary>

        <div class="home-content">
          <ErrorBoundary>
            <div class="section-container">
              <FeaturedProjects projects={profile.projects} showTitle={true} />
            </div>
          </ErrorBoundary>

          <ErrorBoundary>
            <div class="section-container">
              <SkillsList skills={profile.skills} />
            </div>
          </ErrorBoundary>
        </div>
      </section>

      <!-- SECCIÓN: PROYECTOS -->
      <section id="proyectos" class="page-section">
        <h1 class="page-title">Proyectos</h1>
        
        <div class="projects-filters">
          <p class="projects-count">
            <span class="highlight">{sortedProjects.length}</span> proyectos en total
            {sortedProjects.filter(p => p.featured).length > 0 && (
              <span class="featured-count">
                (<span class="highlight">{sortedProjects.filter(p => p.featured).length}</span> destacados)
              </span>
            )}
          </p>
        </div>

        <div class="projects-grid">
          {sortedProjects.length > 0 ? (
            sortedProjects.map(project => (
              <ErrorBoundary>
                <ProjectCard 
                  project={project} 
                  featured={project.featured} 
                />
              </ErrorBoundary>
            ))
          ) : (
            <p class="no-content">No hay proyectos disponibles.</p>
          )}
        </div>
      </section>

      <!-- SECCIÓN: CURRICULUM -->
      <section id="curriculum" class="page-section">
        <div class="cv-container">
          <!-- Encabezado del CV -->
          <div class="cv-header">
            <div class="profile-info">
              <h1>{profile?.basics?.name} {profile?.basics?.last_name}</h1>
              <p class="headline">{profile?.basics?.label}</p>
              
              <div class="contact-details">
                {profile?.basics?.email && (
                  <div class="contact-item">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline></svg>
                    <span>{profile.basics.email}</span>
                  </div>
                )}
                
                {profile?.basics?.phone && (
                  <div class="contact-item">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg>
                    <span>{profile.basics.phone}</span>
                  </div>
                )}
                
                {profile?.basics?.location && (
                  <div class="contact-item">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path><circle cx="12" cy="10" r="3"></circle></svg>
                    <span>{profile.basics.location.city}, {profile.basics.location.region}</span>
                  </div>
                )}
              </div>
            </div>
          </div>

          <!-- Resumen -->
          {profile?.basics?.summary && (
            <section class="cv-section">
              <h2>Perfil Profesional</h2>
              <div class="section-content">
                <p class="summary">{profile.basics.summary}</p>
              </div>
            </section>
          )}
          
          <!-- Experiencia -->
          {profile?.work && profile.work.length > 0 && (
            <section class="cv-section">
              <h2>Experiencia Profesional</h2>
              <div class="section-content timeline">
                {profile.work.map((job: WorkExperience) => (
                  <div class="timeline-item">
                    <div class="timeline-marker"></div>
                    <div class="timeline-content">
                      <div class="job-title-container">
                        <h3 class="job-title">{job.position}</h3>
                        <span class="job-company">{job.company}</span>
                        <span class="job-period">{job.startDate?.toString() || ''} – {job.endDate?.toString() || 'Presente'}</span>
                      </div>
                      <p class="job-summary">{job.summary}</p>
                      {job.highlights && job.highlights.length > 0 && (
                        <ul class="job-highlights">
                          {job.highlights.map((item: string) => (
                            <li>{item}</li>
                          ))}
                        </ul>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </section>
          )}

          <!-- Educación -->
          {profile?.education && profile.education.length > 0 && (
            <section class="cv-section">
              <h2>Educación</h2>
              <div class="section-content timeline">
                {profile.education.map((edu: Education) => (
                  <div class="timeline-item">
                    <div class="timeline-marker"></div>
                    <div class="timeline-content education-item">
                      <h3 class="education-degree">{edu.studyType} en {edu.area}</h3>
                      <div class="education-details">
                        <span class="education-institution">{edu.institution}</span>
                        <span class="education-period">{edu.startDate?.toString() || ''} – {edu.endDate?.toString() || 'Presente'}</span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </section>
          )}
          
          <!-- Habilidades -->
          {profile?.skills && profile.skills.length > 0 && (
            <section class="cv-section">
              <h2>Habilidades</h2>
              <div class="section-content skills-container">
                {profile.skills.map((skill: Skill) => (
                  <div class="skill-category">
                    <h3 class="skill-name">{skill.name}</h3>
                    <div class="skill-tags">
                      {skill.keywords.map((keyword: string) => (
                        <Tag text={keyword} variant="default" size="small" />
                      ))}
                    </div>
                  </div>
                ))}
              </div>
            </section>
          )}

          <!-- Proyectos destacados -->
          {profile?.projects && profile.projects.filter(p => p.featured).length > 0 && (
            <section class="cv-section">
              <h2>Proyectos Destacados</h2>
              <div class="section-content projects">
                {profile.projects.filter(p => p.featured).map((project: Project) => (
                  <div class="project-card">
                    <h3 class="project-title">{project.name}</h3>
                    {project.description && <p class="project-description">{project.description as string}</p>}
                    
                    {project.highlights && project.highlights.length > 0 && (
                      <ul class="project-highlights">
                        {project.highlights.map((highlight: string) => (
                          <li>{highlight}</li>
                        ))}
                      </ul>
                    )}
                    
                    {project.technologies && project.technologies.length > 0 && (
                      <div class="project-tags">
                        {project.technologies.map((tech: string) => (
                          <Tag text={tech} variant="default" size="small" />
                        ))}
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </section>
          )}
        </div>
      </section>
      
      <!-- SECCIÓN: CONTACTO -->
      <section id="contacto" class="page-section">
        <div class="contact-container">
          <h1>Contacto</h1>
          
          <div class="contact-grid">
            <div class="contact-info">
              <h2>Información de contacto</h2>
              <p class="contact-intro">¿Interesado en trabajar juntos? Ponte en contacto conmigo a través de cualquiera de estos canales o completa el formulario.</p>
              
              <div class="contact-channels">
                {profile?.basics?.email && (
                  <div class="contact-channel">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                      <polyline points="22,6 12,13 2,6"></polyline>
                    </svg>
                    <a href={`mailto:${profile.basics.email}`} class="channel-link">{profile.basics.email}</a>
                  </div>
                )}
                
                {profile?.basics?.phone && (
                  <div class="contact-channel">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                    </svg>
                    <a href={`tel:${profile.basics.phone}`} class="channel-link">{profile.basics.phone}</a>
                  </div>
                )}
                
                {profile?.basics?.location?.city && (
                  <div class="contact-channel">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                      <circle cx="12" cy="10" r="3"></circle>
                    </svg>
                    <span class="channel-link">{profile.basics.location.city}, {profile.basics.location.region}</span>
                  </div>
                )}
                
                {profile?.basics?.profiles && profile.basics.profiles.length > 0 && (
                  <div class="social-links">
                    {profile.basics.profiles.map((social: any) => (
                      <a href={social.url} target="_blank" rel="noopener noreferrer" class="social-link" title={social.network}>
                        {social.network === 'GitHub' && (
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
                          </svg>
                        )}
                        {social.network === 'LinkedIn' && (
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
                            <rect x="2" y="9" width="4" height="12"></rect>
                            <circle cx="4" cy="4" r="2"></circle>
                          </svg>
                        )}
                        {social.network === 'Twitter' && (
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>
                          </svg>
                        )}
                      </a>
                    ))}
                  </div>
                )}
              </div>
            </div>

            <div class="contact-form-container">
              <h2>Envíame un mensaje</h2>
              <form id="contact-form" class="contact-form" action="https://formspree.io/f/mldjorey" method="POST">
                <input type="hidden" name="_subject" value="Nuevo mensaje desde el portfolio">
                <input type="hidden" name="_format" value="json">
                <input type="hidden" name="_captcha" value="true">
                <div class="form-group">
                  <label for="name">Nombre</label>
                  <input type="text" id="name" name="name" required>  
                </div>
                
                <div class="form-group">
                  <label for="email">Email</label>
                  <input type="email" id="email" name="email" required>
                </div>
                
                <div class="form-group">
                  <label for="subject">Asunto</label>
                  <input type="text" id="subject" name="subject" required>
                </div>
                
                <div class="form-group">
                  <label for="message">Mensaje</label>
                  <textarea id="message" name="message" rows="5" required></textarea>
                </div>
                
                <button type="submit" class="submit-button">Enviar mensaje</button>
              </form>
              <div id="form-success" class="form-success hidden">¡Mensaje enviado correctamente! Me pondré en contacto contigo pronto.</div>
              <div id="form-error" class="form-error hidden">Hubo un error al enviar el mensaje. Por favor, inténtalo de nuevo.</div>
            </div>
          </div>
        </div>
      </section>
    </div>
  )}
</MainLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Manejo del formulario de contacto
    const contactForm = document.getElementById('contact-form');
    const formSuccess = document.getElementById('form-success');
    const formError = document.getElementById('form-error');
    
    contactForm?.addEventListener('submit', (e) => {
      e.preventDefault();
      
      const formData = new FormData(contactForm as HTMLFormElement);
      
      fetch((contactForm as HTMLFormElement).action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        },
      })
      .then(response => {
        if (response.ok) {
          return response.json();
        }
        throw new Error('Error en la red');
      })
      .then(data => {
        (contactForm as HTMLFormElement).reset();
        formSuccess?.classList.remove('hidden');
        
        setTimeout(() => {
          formSuccess?.classList.add('hidden');
        }, 5000);
      })
      .catch(error => {
        console.error('Error:', error);
        formError?.classList.remove('hidden');
        
        setTimeout(() => {
          formError?.classList.add('hidden');
        }, 5000);
      });
    });

    // Scroll suave para la navegación interna
    document.querySelectorAll('.section-nav a').forEach(anchor => {
      anchor.addEventListener('click', function(e: Event) {
        e.preventDefault();
        
        const self = this as HTMLAnchorElement;
        const targetId = self.getAttribute('href')?.substring(1);
        const targetElement = document.getElementById(targetId as string);
        
        if (targetElement) {
          window.scrollTo({
            top: targetElement.offsetTop - 100, // Ajuste para el header fijo
            behavior: 'smooth'
          });
        }
      });
    });
  });
</script>

<style>
  /* Estilos para la página todo en uno */
  .all-in-one-container {
    font-family: var(--font-family-mono);
    max-width: 800px;
    margin: 0 auto;
  }

  .page-section {
    padding: var(--space-xl) 0;
    border-bottom: 1px solid var(--color-border);
    scroll-margin-top: 100px; /* Para la navegación interna */
  }

  .page-section:last-child {
    border-bottom: none;
  }

  /* Navegación interna */
  .section-nav {
    position: sticky;
    top: 70px;
    z-index: 10;
    background-color: var(--color-background);
    backdrop-filter: blur(10px);
    margin-bottom: var(--space-lg);
    padding: var(--space-sm) 0;
    border-bottom: 1px solid var(--color-border);
  }

  .section-nav ul {
    display: flex;
    justify-content: center;
    gap: var(--space-lg);
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .section-nav a {
    text-decoration: none;
    color: var(--color-text);
    font-weight: 500;
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    transition: all 0.2s ease;
  }

  .section-nav a:hover {
    color: var(--color-primary);
    background-color: var(--color-background-hover);
  }

  /* Estilos específicos para home */
  .home-content {
    margin-top: var(--space-xl);
    display: flex;
    flex-direction: column;
    gap: var(--space-xl);
  }
  
  .section-container {
    margin-bottom: var(--space-lg);
  }

  /* Estilos para proyectos */
  .page-title {
    font-size: var(--text-2xl);
    margin-bottom: var(--space-lg);
    color: var(--color-text);
    border-bottom: 2px solid var(--color-primary);
    padding-bottom: var(--space-xs);
  }

  .projects-filters {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-xl);
  }

  .projects-count {
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
  }

  .highlight {
    color: var(--color-primary);
    font-weight: 600;
  }

  .featured-count {
    margin-left: var(--space-xs);
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: var(--space-lg);
  }
  
  /* Importamos estilos del CV */
  /* Encabezado del CV */
  .cv-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 var(--space-md);
  }
  
  .cv-header {
    margin-bottom: var(--space-xl);
    padding-bottom: var(--space-md);
    border-bottom: 1px solid var(--color-border);
  }
  
  .profile-info h1 {
    font-size: var(--text-3xl);
    margin-bottom: var(--space-xs);
    color: var(--color-heading);
  }
  
  .headline {
    font-size: var(--text-lg);
    color: var(--color-primary);
    margin-bottom: var(--space-md);
    font-weight: 500;
  }
  
  .contact-details {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-md) var(--space-xl);
    margin-top: var(--space-md);
  }
  
  .contact-item {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: var(--text-sm);
  }
  
  .contact-item svg {
    color: var(--color-primary);
  }
  
  /* Secciones del CV */
  .cv-section {
    margin-bottom: var(--space-xl);
  }
  
  .cv-section h2 {
    font-size: var(--text-xl);
    margin-bottom: var(--space-md);
    color: var(--color-heading);
    display: flex;
    align-items: center;
    gap: var(--space-sm);
  }
  
  .cv-section h2::after {
    content: "";
    flex: 1;
    height: 1px;
    background-color: var(--color-border);
    margin-left: var(--space-sm);
  }
  
  .section-content {
    padding-left: var(--space-sm);
  }
  
  /* Resumen del CV */
  .summary {
    font-size: var(--text-md);
    line-height: 1.6;
    color: var(--color-text);
  }
  
  /* Timeline para experiencia y educación */
  .timeline {
    position: relative;
  }
  
  .timeline::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 6px;
    width: 2px;
    background-color: var(--color-border);
  }
  
  .timeline-item {
    position: relative;
    padding-left: var(--space-xl);
    margin-bottom: var(--space-lg);
  }
  
  .timeline-item:last-child {
    margin-bottom: 0;
  }
  
  .timeline-marker {
    position: absolute;
    left: 0;
    top: 5px;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background-color: var(--color-primary);
    z-index: 1;
  }
  
  .timeline-content {
    position: relative;
  }

  /* Estilos para contacto */
  .contact-container {
    max-width: 800px;
    margin: 0 auto;
    padding: var(--space-md);
  }

  .contact-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-xl);
  }

  .contact-intro {
    margin-bottom: var(--space-lg);
    line-height: 1.6;
    color: var(--color-text-light);
  }

  .contact-channels {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
  }

  .contact-channel {
    display: flex;
    align-items: center;
    gap: var(--space-md);
  }

  .contact-channel svg {
    color: var(--color-primary);
  }

  .channel-link {
    color: var(--color-text);
    text-decoration: none;
  }

  .channel-link:hover {
    color: var(--color-primary);
    text-decoration: underline;
  }

  .social-links {
    display: flex;
    gap: var(--space-md);
    margin-top: var(--space-md);
  }

  .social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: var(--color-background-alt);
    color: var(--color-text);
    transition: all 0.2s ease;
  }

  .social-link:hover {
    background-color: var(--color-primary);
    color: var(--color-background);
    transform: translateY(-3px);
  }

  /* Formulario de contacto */
  .contact-form {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .form-group label {
    font-size: var(--text-sm);
    font-weight: 500;
    color: var(--color-text);
  }

  .form-group input,
  .form-group textarea {
    padding: var(--space-sm);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-sm);
    background-color: var(--color-background-alt);
    color: var(--color-text);
    font-family: var(--font-family-mono);
    font-size: var(--text-md);
    transition: border-color 0.2s ease;
  }

  .form-group input:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--color-primary);
  }

  .submit-button {
    padding: var(--space-sm) var(--space-md);
    background-color: var(--color-primary);
    color: var(--color-text-on-primary);
    border: none;
    border-radius: var(--radius-sm);
    font-family: var(--font-family-mono);
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .submit-button:hover {
    background-color: var(--color-primary-dark);
    transform: translateY(-2px);
  }

  .form-success, .form-error {
    margin-top: var(--space-md);
    padding: var(--space-md);
    border-radius: var(--radius-sm);
    text-align: center;
  }

  .form-success {
    background-color: rgba(52, 211, 153, 0.1);
    color: #10b981;
  }

  .form-error {
    background-color: rgba(239, 68, 68, 0.1);
    color: #ef4444;
  }

  .hidden {
    display: none;
  }

  /* Media queries */
  @media (max-width: 768px) {
    .section-nav ul {
      gap: var(--space-sm);
    }

    .section-nav a {
      padding: var(--space-xs) var(--space-xs);
      font-size: var(--text-sm);
    }
    
    .contact-grid, 
    .projects-grid {
      grid-template-columns: 1fr;
    }
    
    .home-content,
    .projects-filters {
      gap: var(--space-lg);
    }
  }
</style>
