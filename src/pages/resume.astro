---
// src/pages/resume.astro
import MainLayout from '@layouts/MainLayout.astro';
import ProfileHeader from '@components/profile/ProfileHeader.astro';
import SkillsList from '@components/profile/SkillsList.astro';
import FeaturedProjects from '@components/profile/FeaturedProjects.astro';
import EducationList from '@components/profile/EducationList.astro';
import ContactInfo from '@components/profile/ContactInfo.astro';
import ProfessionalSummary from '@components/profile/ProfessionalSummary.astro';
import ErrorBoundary from '@components/common/ErrorBoundary.astro';
import { getProfileDataWithFallback } from '../data/api/profileData';
import type { Profile } from '@types';

// Utilizamos el método con fallback para mayor robustez
let profile: Profile | null = null;
let error: Error | null = null;

try {
  profile = await getProfileDataWithFallback();
} catch (e) {
  error = e instanceof Error ? e : new Error(String(e));
  console.error('Error al cargar datos del perfil:', error);
}
---

<MainLayout 
  title={profile ? `CV - ${profile.basics.name} ${profile.basics.last_name}` : 'Currículum Vitae'} 
  description={profile?.basics.summary || 'Currículum Vitae profesional'}
  profileData={profile ? { basics: profile.basics } : undefined}
  showPrintButton={true}
>
  {error && (
    <div class="error-message">
      <h2>No se pudieron cargar los datos</h2>
      <p>Hubo un problema al obtener la información del perfil. Por favor, intenta nuevamente más tarde.</p>
      {import.meta.env.DEV && <pre>{error.message}</pre>}
    </div>
  )}

  {profile && (
    <div class="resume-container">
      <ErrorBoundary>
        <ProfileHeader basics={profile.basics} />
      </ErrorBoundary>

      <div class="resume-content">
        <ErrorBoundary>
          <ProfessionalSummary summary={profile.basics.summary} />
        </ErrorBoundary>

        <ErrorBoundary>
          <SkillsList skills={profile.skills} />
        </ErrorBoundary>
        
        <ErrorBoundary>
          <FeaturedProjects projects={profile.projects} />
        </ErrorBoundary>
        
        <ErrorBoundary>
          <EducationList education={profile.education} />
        </ErrorBoundary>

        <ErrorBoundary>
          <ContactInfo basics={profile.basics} />
        </ErrorBoundary>
      </div>
    </div>
  )}
</MainLayout>

<style>
  .resume-container {
    font-family: var(--font-family-sans);
    max-width: 800px;
    margin: 0 auto;
  }

  .resume-content {
    margin-top: var(--space-xl);
  }

  .resume-projects {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    margin-bottom: var(--space-lg);
  }
  
  /* Estilos específicos para adaptar ProjectCard al CV */
  .resume-projects :global(.project-title) {
    font-size: var(--text-md);
  }

  .resume-projects :global(.external-link-icon) {
    display: none;
  }

  .summary {
    line-height: 1.6;
  }

  .error-message {
    background-color: rgba(239, 68, 68, 0.1);
    color: var(--color-error);
    padding: var(--space-lg);
    border-radius: var(--radius-md);
    margin-bottom: var(--space-xl);
    text-align: center;
  }
  
  @media print {
    .resume-container {
      max-width: none;
      padding: 0;
      margin: 0;
    }

    .resume-content {
      margin-top: var(--space-md);
    }
    
    .resume-projects {
      gap: var(--space-sm);
      margin-bottom: var(--space-sm);
    }
    
    /* Hacemos que las tarjetas de proyecto sean más compactas */
    .resume-projects :global(.card) {
      box-shadow: none;
      border: 1px solid #ddd;
      padding: var(--space-sm);
    }
    
    :global(.project-card) :global(.project-title) {
      font-size: 12pt;
      margin-bottom: 2px;
    }
    
    :global(.project-card) :global(.project-description) {
      font-size: 10pt;
      margin-bottom: 4px;
    }
    
    :global(.tag) {
      font-size: 8pt;
      padding: 2px 6px;
    }
  }
</style>